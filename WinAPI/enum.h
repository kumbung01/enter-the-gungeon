#pragma once


enum class PEN_TYPE
{
	RED,
	GREEN,
	BLUE,
	END,
};

enum class BRUSH_TYPE
{
	RED,
	GREEN,
	BLUE,
	GRAY,
	BLACK,
	HOLLOW,
	END,
};

enum class LEVEL_TYPE
{
	START,
	STAGE_0,
	STAGE_1,
	STAGE_2,
	EDITOR,

	END,
};


enum class TASK_TYPE
{
	// Param0 : Object Address, Param1 : Layer Index
	CREATE_OBJECT,

	// Param0 : Object Address
	DELETE_OBJECT,

	// Param0 : Objects Layer
	DELETE_OBJECTS,

	// Param0 : Next Level
	CHANGE_LEVEL,
};

enum class LAYER_TYPE
{
	BACKGROUND,
	TILE,
	WALL,
	DEFAULT,
	PLAYER,
	PLAYER_OBJECT,
	MONSTER,
	MONSTER_OBJECT,
	GUN,
	// 7 ~ 30
	UIS,
	INGAME_UI,
	UI,
	END,
};


enum class COMPONENT_TYPE
{
	COLLIDER,
	RIGIDBODY,
	FLIPBOOKPLAYER,
	FSM,
	TILEMAP,
};

enum class ASSET_TYPE
{
	TEXTURE,	// 이미지
	SOUND,		// 소리	
	SPRITE,		// 특정 텍스쳐의 특정 부위
	FLIPBOOK,	// Sprite 의 집합체
};


enum class DEBUG_SHAPE
{
	RECT,
	CIRCLE,
	LINE,
};

enum PLAYER_ANIM_STATE
{
	ROGUE_CHEST_OPEN,
	ROGUE_CHEST_OPEN_FAKE,
	ROGUE_CHEST_RECOVER,
	ROGUE_DADFLIP,
	ROGUE_DADFLIP_NORTH,
	ROGUE_DADFLIP_SOUTH,
	ROGUE_DEATH,

	ROGUE_GHOST_BACK,
	ROGUE_GHOST_BACK_LEFT,
	ROGUE_GHOST_BACK_RIGHT,
	ROGUE_GHOST_FRONT,
	ROGUE_GHOST_FRONT_LEFT,
	ROGUE_GHOST_FRONT_RIGHT,
	ROGUE_GHOST_SNEEZE_FRONT_LEFT,
	ROGUE_GHOST_SNEEZE_FRONT_RIGHT,

	// idle: (앞)옆 back: 뒤 backwards: 뒤옆 front: 앞
	ROGUE_IDLE,
	ROGUE_IDLE_HANDS,
	ROGUE_IDLE_HANDS2,
	ROGUE_IDLE_BACK,
	ROGUE_IDLE_BACKWARDS,
	ROGUE_IDLE_BACKWARDS_HANDS2,
	ROGUE_IDLE_BACK_HANDS,
	ROGUE_IDLE_BACK_HAND_LEFT,
	ROGUE_IDLE_BACK_HAND_RIGHT,
	ROGUE_IDLE_FRONT,
	ROGUE_IDLE_FRONT_HANDS,
	ROGUE_IDLE_FRONT_HAND_LEFT,
	ROGUE_IDLE_FRONT_HAND_RIGHT,

	// 이동
	ROGUE_RUN_BACK,
	ROGUE_RUN_BACKWARD,
	ROGUE_RUN_BACKWARD_HANDS2,
	ROGUE_RUN_BACK_DOORWAY,
	ROGUE_RUN_BACK_HANDS,
	ROGUE_RUN_BACK_HANDS2,
	ROGUE_RUN_BACK_HANDS_LEFT,
	ROGUE_RUN_FORWARD,
	ROGUE_RUN_FORWARD_HANDS,
	ROGUE_RUN_FORWARD_HANDS2,
	ROGUE_RUN_FRONT,
	ROGUE_RUN_FRONT_HANDS,
	ROGUE_RUN_FRONT_HANDS2,
	ROGUE_RUN_FRONT_HANDS_LEFT,

	// 구르기
	ROGUE_DODGE_BACK,
	ROGUE_DODGE_FRONT,
	ROGUE_DODGE_LEFT,
	ROGUE_DODGE_LEFT_BACK,

	ROGUE_JETPACK_BACK,
	ROGUE_JETPACK_BACK_RIGHT,
	ROGUE_JETPACK_FRONT,
	ROGUE_JETPACK_FRONT_HAND,
	ROGUE_JETPACK_FRONT_RIGHT,
	ROGUE_JETPACK_FRONT_RIGHT_HAND,
	ROGUE_PET_RIGHT,
	ROGUE_PITFALL,
	ROGUE_PITFALL_DOWN,
	ROGUE_PIT_RETURN,

	ROGUE_SELECT_CHOOSE,
	ROGUE_SELECT_CROUCH,
	ROGUE_SELECT_CROUCH_DRAW,
	ROGUE_SELECT_IDLE,
	ROGUE_SELECT_POSE,
	ROGUE_SELECT_POSE_DANCE,
	ROGUE_SELECT_THUMBS_UP,
	ROGUE_SHOT_DEATH,
	ROGUE_SLIDE_ALTRIGHT,
	ROGUE_SLIDE_RIGHT,
	ROGUE_SLIDE_UP,
	ROGUE_SPACEFLAIL,
	ROGUE_SPIN,
	ROGUE_TABLEKICK,
	ROGUE_TABLEKICK_DOWN,
	ROGUE_TABLEKICK_DOWN_HANDS,
	ROGUE_TABLEKICK_DOWN_TWOHANDS,
	ROGUE_TABLEKICK_HANDS,
	ROGUE_TABLEKICK_TWOHANDS,
	ROGUE_TABLEKICK_UP,
	ROGUE_TABLEKICK_UP_TWOHAND,
};

enum class PLAYER_STATE
{
	IDLE,
	MOVING,
	ROLLING,
	FALLING,
	DEAD,
};

enum BULLETMAN_ANIM_STATE
{
	BULLET_COVER_LEFT_IDLE,
	BULLET_COVER_LEFT_LEAP,
	BULLET_COVER_RIGHT_IDLE,
	BULLET_COVER_RIGHT_LEAP,
	BULLET_DEATH_BACK_SOUTH,
	BULLET_DEATH_FRONT_NORTH,
	BULLET_DEATH_LEFT_BACK,
	BULLET_DEATH_LEFT_FRONT,
	BULLET_DEATH_LEFT_SIDE,
	BULLET_DEATH_RIGHT_BACK,
	BULLET_DEATH_RIGHT_FRONT,
	BULLET_DEATH_RIGHT_SIDE,
	BULLET_DIE_LEFT,
	BULLET_DIE_LEFT_BACK,
	BULLET_DIE_RIGHT,
	BULLET_DIE_RIGHT_BACK,
	BULLET_HIT_BACK_LEFT,
	BULLET_HIT_BACK_RIGHT,
	BULLET_HIT_LEFT,
	BULLET_HIT_RIGHT,
	BULLET_IDLE_BACK,
	BULLET_IDLE_LEFT,
	BULLET_IDLE_RIGHT,
	BULLET_PITFALL_RIGHT,
	BULLET_RUN_LEFT,
	BULLET_RUN_LEFT_BACK,
	BULLET_RUN_RIGHT,
	BULLET_RUN_RIGHT_BACK,
	BULLET_SHOOTING_LEFT,
	BULLET_SHOOTING_RIGHT,
	BULLET_SPAWN,
	BULLET_SURPRISE_LEFT,
	BULLET_SURPRISE_RIGHT,
};

enum class MONSTER_STATE
{
	IDLE,
	HIT,
	RUN,
	SHOOTING,
	SURPRISE,
	DIE,
	DEATH,
	COVER,
	SPAWN,
};

enum TILE_IDX {
	TILE_FLOOR = 22,
	TILE_WALL_SIDE = 155,
	TILE_WALL_ROOF_HORIZONTAL_LEFT = 282,
	TILE_WALL_ROOF_HORIZONTAL = 243,
	TILE_WALL_ROOF_HORIZONTAL_RIGHT = 319,
	TILE_WALL_ROOF_VERTICAL_TOP = 298,
	TILE_WALL_ROOF_VERTICAL = 18, 
	TILE_WALL_ROOF_VERTICAL_BOTTOM = 302,
};